.TH "Arduino" 3 "5 Dec 2010" "Version Version 0.1.1" "Arduino Ethernet Shield/USB Interface Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Arduino \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBArduino\fP ()"
.br
.RI "\fICONSTRUCTOR: \fBArduino::Arduino()\fP; Class default constructor. \fP"
.ti -1c
.RI "\fBArduino\fP (byte mac[6], byte ip[4])"
.br
.RI "\fICONSTRUCTOR: \fBArduino::Arduino\fP(byte mac [6], byte ip [4]); Class ethernet style constructor. \fP"
.ti -1c
.RI "\fBArduino\fP (const \fBArduino\fP &rhs)"
.br
.RI "\fICOPY CONSTRUCTOR: \fBArduino::Arduino(const Arduino &rhs)\fP; Class copy constructor. \fP"
.ti -1c
.RI "\fBArduino\fP \fBoperator=\fP (const \fBArduino\fP &rhs)"
.br
.RI "\fIASSIGNMENT OPERATOR: \fBArduino::operator=\fPArduino(const Arduino rhs); Class assignment operator. \fP"
.ti -1c
.RI "\fB~Arduino\fP ()"
.br
.RI "\fIDESTRUCTOR: \fBArduino::~Arduino()\fP; Class default destructor. \fP"
.ti -1c
.RI "void \fBinit_ethernet\fP ()"
.br
.RI "\fIMETHOD: \fBArduino::init_ethernet()\fP; Default ether net mode initializer. \fP"
.ti -1c
.RI "void \fBflipBit\fP (int pin)"
.br
.RI "\fIMETHOD: \fBArduino::flipBit(int pin)\fP; Default ether net mode initializer. \fP"
.ti -1c
.RI "const byte * \fBgetMacAddress\fP ()"
.br
.RI "\fIMETHOD: \fBArduino\fP: \fBgetMacAddress()\fP; Getter for this arduino's MAC address. \fP"
.ti -1c
.RI "const byte * \fBgetIpAddress\fP ()"
.br
.RI "\fIMETHOD: \fBArduino::getIpAddress()\fP; Getter for this arduino's IP [IEEE 802.11 IPv4] address;. \fP"
.ti -1c
.RI "void \fBsetMacAddress\fP (byte *)"
.br
.RI "\fIMETHOD: \fBArduino\fP: \fBsetMacAddress()\fP; setter for this arduino's MAC address. \fP"
.ti -1c
.RI "void \fBsetIpAddress\fP (byte *)"
.br
.RI "\fIMETHOD: \fBArduino::setIpAddress()\fP; Setter for this arduino's IP [IEEE 802.11 IPv4] address;. \fP"
.ti -1c
.RI "void \fBreconnect\fP ()"
.br
.RI "\fIMETHOD: \fBArduino::reconnect()\fP; Reconnects with the Arduino's current MAC address and IPv4 Address. This Arduino's IP and MAC address are stored as private member variables of this class. \fP"
.ti -1c
.RI "void \fBconnect\fP ()"
.br
.RI "\fIMETHOD: \fBArduino::connect()\fP; Reconnects with the Arduino's current MAC address and IPv4 Address. This Arduino's IP and MAC address are stored as private member variables of this class. \fP"
.ti -1c
.RI "void \fBserialConnect\fP ()"
.br
.RI "\fIMETHOD: \fBArduino::serialConnect()\fP; Reconnects with the Arduino's current MAC address and IPv4 Address. This Arduino's IP and MAC address are stored as private member variables of this class. \fP"
.ti -1c
.RI "void \fBserialWriteToFile\fP (const char *, char *)"
.br
.RI "\fIMETHOD: \fBArduino::serialWriteToFile(const char*, char*)\fP. \fP"
.ti -1c
.RI "void \fBserialPrint\fP (const char *)"
.br
.RI "\fIMETHOD: \fBArduino::serialPrint(const char*)\fP; Reconnects with the Arduino's current MAC address and IPv4 Address. This Arduino's IP and MAC address are stored as private member variables of this class. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 35 of file arduino.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Arduino::Arduino ()"
.PP
CONSTRUCTOR: \fBArduino::Arduino()\fP; Class default constructor. CONSTRUCTOR: \fBArduino::Arduino()\fP Class default constructor.
.PP
\fBReturns:\fP
.RS 4
None 
.RE
.PP
\fBParameters:\fP
.RS 4
\fINone\fP 
.br
\fINone\fP 
.RE
.PP

.PP
Definition at line 23 of file arduino.cpp.
.SS "Arduino::Arduino (byte mac[6], byte ip[4])"
.PP
CONSTRUCTOR: \fBArduino::Arduino\fP(byte mac [6], byte ip [4]); Class ethernet style constructor. \fBReturns:\fP
.RS 4
None 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIbyte\fP mac[6] (MAC address) 
.br
\fIbyte\fP ip[4] (IP address [IEEE 802.11 IPv4])
.br
\fIbyte\fP mac[6] (mac address) 
.br
\fIbyte\fP ip[4] (ip address [IEEE 802.11 IPv4]) 
.RE
.PP

.PP
Definition at line 38 of file arduino.cpp.
.SS "Arduino::Arduino (const \fBArduino\fP & rhs)"
.PP
COPY CONSTRUCTOR: \fBArduino::Arduino(const Arduino &rhs)\fP; Class copy constructor. Class copy constructor. Effectively copies over all private member variables from object rhs.
.PP
\fBReturns:\fP
.RS 4
None 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIconst\fP \fBArduino\fP rhs - Reference to the right hand side of the equation
.br
\fIconst\fP \fBArduino\fP rhs - Reference to the right hand side of the equation 
.RE
.PP

.PP
Definition at line 68 of file arduino.cpp.
.SS "Arduino::~Arduino ()"
.PP
DESTRUCTOR: \fBArduino::~Arduino()\fP; Class default destructor. DESTRUCTOR: \fBArduino::~Arduino()\fP Class default destructor.
.PP
\fBReturns:\fP
.RS 4
None 
.RE
.PP
\fBParameters:\fP
.RS 4
\fINone\fP 
.br
\fINone\fP 
.RE
.PP

.PP
Definition at line 135 of file arduino.cpp.
.SH "Member Function Documentation"
.PP 
.SS "void Arduino::connect ()"
.PP
METHOD: \fBArduino::connect()\fP; Reconnects with the Arduino's current MAC address and IPv4 Address. This Arduino's IP and MAC address are stored as private member variables of this class. METHOD: \fBArduino::connect()\fP Connects with the Arduino's current MAC address and IPv4 Address. This Arduino's IP and MAC address are stored as private member variables of this class. 
.PP
Definition at line 285 of file arduino.cpp.
.SS "void Arduino::flipBit (int pin)"
.PP
METHOD: \fBArduino::flipBit(int pin)\fP; Default ether net mode initializer. METHOD: \fBArduino::flipBit(int pin)\fP Default ether net mode initializer.
.PP
\fBReturns:\fP
.RS 4
None 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIint\fP pin
.br
\fIint\fP pin 
.RE
.PP

.PP
Definition at line 185 of file arduino.cpp.
.SS "const byte * Arduino::getIpAddress ()"
.PP
METHOD: \fBArduino::getIpAddress()\fP; Getter for this arduino's IP [IEEE 802.11 IPv4] address;. METHOD: \fBArduino::getIpAddress()\fP Getter for this arduino's IP [IEEE 802.11 IPv4] address. Returns a pointer to the first element of a byte array in memory (casted as a void *).
.PP
\fBReturns:\fP
.RS 4
const byte* 
.RE
.PP

.PP
Definition at line 215 of file arduino.cpp.
.SS "const byte * Arduino::getMacAddress ()"
.PP
METHOD: \fBArduino\fP: \fBgetMacAddress()\fP; Getter for this arduino's MAC address. METHOD: \fBArduino\fP: \fBgetMacAddress()\fP Getter for this arduino's MAC address. Returns a pointer to the first element of a byte array in memory (casted as a void *).
.PP
\fBReturns:\fP
.RS 4
const byte* 
.RE
.PP

.PP
Definition at line 200 of file arduino.cpp.
.SS "void Arduino::init_ethernet ()"
.PP
METHOD: \fBArduino::init_ethernet()\fP; Default ether net mode initializer. METHOD: \fBArduino::init_ethernet()\fP Default ether net mode initializer.
.PP
\fBReturns:\fP
.RS 4
None 
.RE
.PP
\fBParameters:\fP
.RS 4
\fINone\fP 
.br
\fINone\fP 
.RE
.PP

.PP
Definition at line 154 of file arduino.cpp.
.SS "Arduino::Arduino Arduino::operator= (const \fBArduino\fP & rhs)"
.PP
ASSIGNMENT OPERATOR: \fBArduino::operator=\fPArduino(const Arduino rhs); Class assignment operator. ASSIGNMENT OPERATOR: \fBArduino::operator=\fPArduino(const Arduino rhs) Class assignment operator.
.PP
\fBReturns:\fP
.RS 4
\fBArduino\fP lhs - Reference to the left hand side of the equation 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIconst\fP \fBArduino\fP rhs - Reference to the right hand side of the equation
.RE
.PP
\fBReturns:\fP
.RS 4
\fBArduino\fP *lhsPtr - Reference to the left hand side of the equation 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIconst\fP \fBArduino\fP rhs - Reference to the right hand side of the equation 
.RE
.PP

.PP
Definition at line 101 of file arduino.cpp.
.SS "void Arduino::reconnect ()"
.PP
METHOD: \fBArduino::reconnect()\fP; Reconnects with the Arduino's current MAC address and IPv4 Address. This Arduino's IP and MAC address are stored as private member variables of this class. METHOD: \fBArduino::reconnect()\fP Reconnects with the Arduino's current MAC address and IPv4 Address. This Arduino's IP and MAC address are stored as private member variables of this class. 
.PP
Definition at line 264 of file arduino.cpp.
.SS "void Arduino::serialConnect ()"
.PP
METHOD: \fBArduino::serialConnect()\fP; Reconnects with the Arduino's current MAC address and IPv4 Address. This Arduino's IP and MAC address are stored as private member variables of this class. METHOD: \fBArduino::serialConnect()\fP Connects with the Arduino's current MAC address and IPv4 Address. This Arduino's IP and MAC address are stored as private member variables of this class. 
.PP
Definition at line 309 of file arduino.cpp.
.SS "void Arduino::serialPrint (const char * txt)"
.PP
METHOD: \fBArduino::serialPrint(const char*)\fP; Reconnects with the Arduino's current MAC address and IPv4 Address. This Arduino's IP and MAC address are stored as private member variables of this class. METHOD: \fBArduino::serialPrint(const char*)\fP Connects with the Arduino's current MAC address and IPv4 Address. This Arduino's IP and MAC address are stored as private member variables of this class.
.PP
\fBParameters:\fP
.RS 4
\fIconst\fP char* txt 
.RE
.PP

.PP
Definition at line 324 of file arduino.cpp.
.SS "void Arduino::serialWriteToFile (const char * inTxt, char * outFile)"
.PP
METHOD: \fBArduino::serialWriteToFile(const char*, char*)\fP. METHOD: \fBArduino::serialWriteToFile(const char* inTxt, char* outFile)\fP.
.PP
\fBParameters:\fP
.RS 4
\fIconst\fP char* inTxt 
.br
\fIchar*\fP outFileLoc Reconnects with the Arduino's current MAC address and IPv4 Address. This Arduino's IP and MAC address are stored as private member variables of this class. 
.RE
.PP

.PP
Definition at line 340 of file arduino.cpp.
.SS "void Arduino::setIpAddress (byte * addrPtr)"
.PP
METHOD: \fBArduino::setIpAddress()\fP; Setter for this arduino's IP [IEEE 802.11 IPv4] address;. METHOD: \fBArduino::setIpAddress()\fP Setter for this arduino's IP [IEEE 802.11 IPv4] address. Changes a private member variable within this \fBArduino\fP object. Attempts to reconnect.
.PP
\fBParameters:\fP
.RS 4
\fIbyte*\fP addrPtr 
.RE
.PP

.PP
Definition at line 247 of file arduino.cpp.
.SS "void Arduino::setMacAddress (byte * addrPtr)"
.PP
METHOD: \fBArduino\fP: \fBsetMacAddress()\fP; setter for this arduino's MAC address. METHOD: \fBArduino\fP: \fBsetMacAddress()\fP Setter for this arduino's MAC address. Changes a private member variable within this \fBArduino\fP object. Attempts to reconnect.
.PP
\fBParameters:\fP
.RS 4
\fIbyte*\fP addrPtr 
.RE
.PP

.PP
Definition at line 230 of file arduino.cpp.

.SH "Author"
.PP 
Generated automatically by Doxygen for Arduino Ethernet Shield/USB Interface Project from the source code.
